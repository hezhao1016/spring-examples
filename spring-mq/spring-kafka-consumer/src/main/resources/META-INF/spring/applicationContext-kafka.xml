<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd"
	   default-lazy-init="true">

	<!-- 定义consumer的参数 -->
	<bean id="consumerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<!-- 指定了要连接到的broker,多个逗号分隔 -->
				<entry key="bootstrap.servers" value="${kafka.servers}" />
				<!-- 分组ID -->
				<entry key="group.id" value="${kafka.group.id}" />
				<!-- 自动提交 -->
				<entry key="enable.auto.commit" value="${kafka.enable.auto.commit}"/>
				<entry key="auto.commit.interval.ms" value="${kafka.auto.commit.interval.ms}"/>
				<entry key="auto.offset.reset" value="${kafka.auto.offset.reset}"/>
				<entry key="session.timeout.ms" value="${kafka.session.timeout.ms}"/>
				<!-- 用来指定key的反序列化器 -->
				<entry key="key.deserializer" value="${kafka.key.deserializer}"/>
				<!-- 用来指定value的反序列化器 -->
				<entry key="value.deserializer" value="${kafka.key.deserializer}"/>
			</map>
		</constructor-arg>
	</bean>

	<!-- 创建consumerFactory bean -->
	<bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg>
			<ref bean="consumerProperties" />
		</constructor-arg>
	</bean>

	<!-- 定义消费实现类 -->
	<bean id="kafkaMessageListener" class="com.hz.learnspring.kafka.service.KafkaMessageListener"/>

	<!-- 消费者容器配置信息 -->
	<bean id="containerProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
		<!-- 要监听的topic列表 -->
		<constructor-arg name="topics">
			<list>
				<value>test.string</value>
				<value>test.message</value>
			</list>
		</constructor-arg>
		<property name="messageListener" ref="kafkaMessageListener"/>
	</bean>

	<!-- 消费者并发消息监听容器，执行doStart()方法 -->
	<bean id="messageListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer"
		  init-method="doStart">
		<constructor-arg ref="consumerFactory"/>
		<constructor-arg ref="containerProperties"/>
	</bean>

</beans>