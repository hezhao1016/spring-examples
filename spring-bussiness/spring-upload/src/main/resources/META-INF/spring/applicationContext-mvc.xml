<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:jee="http://www.springframework.org/schema/jee" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd"
	   default-lazy-init="true">

	<!-- 开启MVC注解 -->
	<mvc:annotation-driven />

	<aop:aspectj-autoproxy />

	<!-- 配置视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- 文件上传配置 -->
	<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- maxUploadSize(单位字节)，设置上传文件的最大尺寸为20M，即[20*1024*1024] -->
		<property name="maxUploadSize" value="20971520" />
		<!-- resolveLazily属性启用是为了推迟文件解析，以便在UploadAction中捕获文件大小异常 -->
		<property name="resolveLazily" value="true"/>
	</bean>

	<!--&lt;!&ndash; 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 &ndash;&gt;
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				&lt;!&ndash; <prop key="org.apache.shiro.authz.UnauthorizedException">error/noperms</prop> &ndash;&gt;
				<prop key="java.lang.Throwable">500</prop>
			</props>
		</property>
	</bean>-->

	<!-- 对静态资源文件的访问 方案一 （二选一） -->
	<mvc:default-servlet-handler default-servlet-name="default"/>

	<!-- 对静态资源文件的访问 方案二 （二选一）-->
	<!-- <mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>
	<mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>
	<mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/> -->

	<!--Tomcat, Jetty, JBoss, and GlassFish 自带的默认Servlet的名字  "default"
		Google App Engine 自带的 默认Servlet的名字  "_ah_default"
		Resin 自带的 默认Servlet的名字  "resin-file"
		WebLogic 自带的 默认Servlet的名字  "FileServlet"
		WebSphere 自带的 默认Servlet的名字  "SimpleFileServlet" -->

	<!-- 统一异常处理 -->
	<!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		&lt;!&ndash; 定义默认的异常处理页面，当该异常类型的注册时使用 &ndash;&gt;
		<property name="defaultErrorView" value="500"></property>
		&lt;!&ndash; 定义异常处理页面用来获取异常信息的变量名，默认名为exception &ndash;&gt;
		<property name="exceptionAttribute" value="ex"></property>
		&lt;!&ndash; 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 &ndash;&gt;
		<property name="exceptionMappings">
			<props>
				<prop key="cn.basttg.core.exception.BusinessException">error-business</prop>
				<prop key="cn.basttg.core.exception.ParameterException">error-parameter</prop>
			</props>
		</property>
	</bean>-->

</beans>