<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:cache="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
			http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd"
	   default-lazy-init="true">

	<!-- 启用缓存注解功能 -->
	<cache:annotation-driven cache-manager="cacheManager"/>

	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" factory-method="create">
		<constructor-arg ref="jedisConnectionFactory"/>
	</bean>

	<!-- RedisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<!-- 指定key的序列化器 -->
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<!-- 用来指定value的序列化器 -->
		<property name="valueSerializer" >
			<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
		</property>
		<!-- 指定hashKey的序列化器 -->
		<property name="hashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<!-- 指定hashValue的序列化器 -->
		<property name="hashValueSerializer">
			<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
		</property>
		<!-- 开启事务 -->
		<property name="enableTransactionSupport" value="true"></property>
	</bean>

	<!-- StringRedisTemplate -->
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<!-- 开启事务 -->
		<property name="enableTransactionSupport" value="true"></property>
	</bean>

	<!-- 单机版 -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg ref="redisStandaloneConfiguration" />
	</bean>
	<bean id="redisStandaloneConfiguration" class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
		<property name="hostName" value="${redis.standalone.host}"/>
		<property name="port" value="${redis.standalone.port}"/>
		<property name="database" value="${redis.standalone.database}"/>
		<property name="password">
			<bean class="org.springframework.data.redis.connection.RedisPassword" factory-method="of">
				<constructor-arg type="java.lang.String" value="${redis.standalone.password}"/>
			</bean>
		</property>
	</bean>


	<!--&lt;!&ndash; 集群版 &ndash;&gt;
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg ref="redisClusterConfiguration" />
		<constructor-arg ref="redisPoolConfig" />
	</bean>
	&lt;!&ndash; redis 连接池配置 &ndash;&gt;
	<bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		&lt;!&ndash; maxIdle最大空闲连接数 &ndash;&gt;
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		&lt;!&ndash; maxIdle最小空闲连接数 &ndash;&gt;
		<property name="minIdle" value="${redis.pool.minIdle}" />
		&lt;!&ndash; maxTotal最大连接数 &ndash;&gt;
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		&lt;!&ndash; maxWaitMillis获取连接时的最大等待毫秒数,小于零表示阻塞不确定的时间,默认为-1 &ndash;&gt;
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />
		&lt;!&ndash; testOnBorrow在获取连接的时是否检查有效性 &ndash;&gt;
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
		&lt;!&ndash; testOnReturn是否在归还到池中前进行检验 &ndash;&gt;
		<property name="testOnReturn" value="${redis.pool.testOnReturn}" />
	</bean>
	&lt;!&ndash; redis 集群配置 &ndash;&gt;
	<bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
		<constructor-arg>
			<bean class="org.springframework.core.env.MapPropertySource">
				<constructor-arg name="name" value="redisClusterConfiguration" />
				<constructor-arg>
					<map>
						&lt;!&ndash; redis集群ip:port,ip2:port2 &ndash;&gt;
						<entry key="spring.redis.cluster.nodes" value="${redis.cluster.nodes}" />
						&lt;!&ndash; 转发次数,一般等于节点数 &ndash;&gt;
						<entry key="spring.redis.cluster.max-redirects" value="${redis.cluster.max-redirects}" />
					</map>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>-->

</beans>