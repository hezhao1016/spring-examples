<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:cache="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
			http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd"
	   default-lazy-init="true">

	<!-- RedisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<!-- 指定key的序列化器 -->
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<!-- 用来指定value的序列化器 -->
		<property name="valueSerializer" >
			<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
		</property>
		<!-- 开启事务 -->
		<property name="enableTransactionSupport" value="true"></property>
	</bean>

	<!-- StringRedisTemplate -->
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<!-- 开启事务 -->
		<property name="enableTransactionSupport" value="true"></property>
	</bean>

	<!-- 单机版Redis -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg ref="redisStandaloneConfiguration" />
	</bean>
	<bean id="redisStandaloneConfiguration" class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
		<property name="hostName" value="${redis.standalone.host}"/>
		<property name="port" value="${redis.standalone.port}"/>
		<property name="database" value="${redis.standalone.database}"/>
		<property name="password">
			<bean class="org.springframework.data.redis.connection.RedisPassword" factory-method="of">
				<constructor-arg type="java.lang.String" value="${redis.standalone.password}"/>
			</bean>
		</property>
	</bean>

</beans>